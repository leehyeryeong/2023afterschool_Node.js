XMLHttpRequest
 * 웹 브라우저는 서버에 데이터를 요청하기 위한 XMLHttpRequest 객체를 내장
 * XMLHttpRequest: 서버로부터 XML 데이터를 전송 받아 처리하는 데 사용됨
 * responseText(): 서버에 요청하여 응답으로 받은 데이터를 문자열로 저장
 * open(): 요청을 초기화
 * send(): 서버에 요청 보내기, GET 방식 요청일 떄 사용,
 * send(string): 서버에 요청 보냄. POST 방식 요청일 때 사용

Ajax에서는 요청을 보내기 전에 setRequestHeader() 메소드를 사용하여 HTTP 요청 헤더를 작성할 수 있습니다
 * 문법
 * XMLHttpRequest 인스턴스.setRequestHeadER(헤더이름, 헤더값)
 * 헤더 이름은 HTTP 요청 에더에 포함하고자 하는 헤더의 이름이며, 그 값도 같이 전달합니다.

appendChild(): 자식 요소를 추가
window.onload = getUser; //로딩 시 getUser 호출
window.onload: js에서 페이지가 로드되면 자동 실행되는 전역콜백함수
window: 웹브라우저를 담당하는 객체

DB 대용으로 users라는 객체를 선언해 사용자 정보를 저장
POST / users 요청: 사용자를 새로 저장
PUT / users / 아이디 요청: 해당 아이디의 사용자 데이터를 수정
DELETE / users / 아이디 요청: 해당 아이디의 사용자 제거

POST, PUT 요청 처리시 req.on('data'), req.on('end') 를 사용하여 요청의 본문에 있는 데이터를 꺼냄.

REST 방식으로 주소를 만들어서 주소와 메소드만 보면 요청 내용 유추 가능
Name: 요청 주소, Method: 요청 메소드, Status: HTTP 응답 코드, Type: 요청의 종류

POST / users : 사용자 등록하는 요청
DELETE / users / 1505550586127: 해당키를 가진 사용자를 제거하는 요청
수정, 삭제, 등록 발생할 때마다 GET / users로 갱신된 사용자 정보를 가져옴
Genural: 공통된 헤더, Request Header: 요청의 헤더
Response Headers: 응답의 헤더, Payload: 요청의 본문 표시됨
Preview, Response: 응답의 본문